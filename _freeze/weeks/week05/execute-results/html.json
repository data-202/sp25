{
  "hash": "d5843f1490c9b9ead581cb779e3dd9c4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"DATA 202 - Week 5\"\nsubtitle: \"Univariate analysis\"\nauthor: \"Nathan Alexander, PhD\"\ninstitute: \"Center for Applied Data Science and Analytics\"\nformat: \n  html: default\n  revealjs:\n    output-file: week05-slides.html\n    height: 900\n    width: 1600\n    smaller: false\n    scrollable: true\n    slide-number: c/t #< collapsted/total\n    logo: \"img/howard-logo.jpg\"\n    footer: \"[Course Data GitHub](https://github.com/data-202)\"\n    toc: false\n    echo: true\n    incremental: false\n---\n\n\n\n\n\n\n## Part I: Context\n\n------------------------------------------------------------------------\n\n### Types of studies and sampling strategies\n\nThe methods used to collect sample data for statistical analysis is extremely important.\n\nIf sample data are not collected appropriately, resulting statistical analyses will be futile.\n\nAs a result, planning a study by identifying *research questions*, the *population* and *sample* of interest, and selecting the appropriate *research method(s)* that will be used to *analyze data* that is collected are all essential parts in the statistical data analysis process.\n\n------------------------------------------------------------------------\n\n#### Understanding experimental and observational study designs\n\nThere are many different types of research studies.\n\nSome studies use non-traditional methods (such as oral traditions) to collect data, while others focus on more traditional methods (such as surveys) to analyze data on a sample or a population.\n\nThese data collection methods produce a set of observations upon which statistical analyses can be applied. We consider two core study designs in statistical data analysis: *experimental* studies and *observational* studies.\n\n------------------------------------------------------------------------\n\n::: callout-DEFINITIONS\n**Experimental study**: In an experimental study, a *treatment* is applied to a sample of interest to observe its effects. There is generally a control group and a treatment group used to understand the effects of the treatment. Individual observations are referred to as experimental units whereas studies involving humans are generally defined as study subjects.\n\n**Observational study**: In an observational study, specific characteristics of a sample or population are observed and measured but individual observations or subjects of study are not influenced or modified in any way.\n:::\n\n------------------------------------------------------------------------\n\n##### Three types of observational studies\n\n::: {.callout-caution icon=\"false\"}\n## **DEFINITIONS**: Types of studies\n\n**Retrospective study**: In a retrospective study, we go back in time to collect data over some past period.\n\n**Cross-sectional study**: In a cross-sectional study, data are collected and measured at one point in time.\n\n**Prospective study**: In a prospective study, we set up a study to go forward in time and observe groups sharing common factors.\n:::\n\n------------------------------------------------------------------------\n\n##### Identify and describe the different sampling methods\n\nThere are two broad categories of selecting members of a population to generate sample data:\n\n-   Probability sampling\n\n-   Non-probability sampling\n\nWithin these two broad categories are other methods based on the needs of the study. Each methods is used to support statistical data analysis with some methods providing stronger evidence than others.\n\n------------------------------------------------------------------------\n\n::: {.callout-caution icon=\"false\"}\n### **Definitions**: Sampling methods\n\n**Probability sampling**: Involves the random selection of subjects in such a way that every member of a sample has the sample probability of being selected.\n\n**Non-probability sampling**: Involves the use of criteria to select data that is not based on an equal likelihood of selection.\n:::\n\n------------------------------------------------------------------------\n\n#### Example 5.1: The Atlanta University Studies\n\n![Image from The W.E.B. DuBois Collection. https://credo.library.umass.edu](img/wk5-a-0.jpg)\n\n------------------------------------------------------------------------\n\n#### Example 5.2: The Atlanta University Studies\n\n![Image from The W.E.B. DuBois Collection. https://credo.library.umass.edu](img/wk5-a-1.jpg)\n\n------------------------------------------------------------------------\n\n#### Example 5.3: The Atlanta University Studies\n\n## ![Image from The W.E.B. DuBois Collection. https://credo.library.umass.edu](img/wk5-a-2.jpg)\n\n#### Example 5.4: The Atlanta University Studies\n\n![Image from The W.E.B. DuBois Collection. https://credo.library.umass.edu](img/wk5-a-3.jpg)\n\n------------------------------------------------------------------------\n\n#### Example 5.5: The Atlanta University Studies\n\n![Image from The W.E.B. DuBois Collection. https://credo.library.umass.edu](img/wk5-a-4.jpg)\n\n------------------------------------------------------------------------\n\n#### Example 5.6: The Atlanta University Studies\n\n![Image from The W.E.B. DuBois Collection. https://credo.library.umass.edu](img/wk5-a-5.jpg)\n\n------------------------------------------------------------------------\n\n#### Example 5.7: The Atlanta University Studies\n\n![Image from The W.E.B. DuBois Collection. https://credo.library.umass.edu](img/wk5-a-6.jpg)\n\n------------------------------------------------------------------------\n\n#### Example 5.8: The Atlanta University Studies\n\n![Image from The W.E.B. DuBois Collection. https://credo.library.umass.edu](img/wk5-a-7.jpg)\n\n------------------------------------------------------------------------\n\n#### Example 5.9: The Atlanta University Studies\n\n![Image from The W.E.B. DuBois Collection. https://credo.library.umass.edu](img/wk5-a-8.jpg)\n\n------------------------------------------------------------------------\n\n#### Example 5.10: The Atlanta University Studies\n\n![Image from The W.E.B. DuBois Collection. https://credo.library.umass.edu](img/wk5-a-9.jpg)\n\n------------------------------------------------------------------------\n\n##### Example 5.11: The Black Census\n\n![Image from The Black Futures Lab. Blackcensus.org](img/wk5-a-10.png)\n\n------------------------------------------------------------------------\n\n##### Example 5.12: The Black Census reports\n\n![Image from The Black Futures Lab. Blackcensus.org](img/wk5-a-11.png)\n\n------------------------------------------------------------------------\n\n## Part II: Content\n\n------------------------------------------------------------------------\n\n### The Big Picture\n\nPrior to jumping into more details about univariate data examples in the next section, it will be important to gather a \"big picture\" view of the field. This big picture view will provide us with a high-level description of the various topics we will cover in the course.\n\n------------------------------------------------------------------------\n\n#### Population parameter\n\nA number which summarizes the entire group.\n\n#### Sample statistic\n\nA single number that summarizes a subset of data, or the sample.\n\n![Population vs. Sample. Image from Scribbr.](img/wk5-b-1.png){width=\"40%\"}\n\n------------------------------------------------------------------------\n\n#### Confidence interval (CI)\n\n-   Range of likely or plausible values for a population parameter.\n\n-   Based on a sample and statistics from that sample.\n\n-   *Margin of error* represents the number of standard deviations on a statistic.\n\n![Plausible values for a variable via the CI. Image from Psychologicalscience.org](img/wk5-b-2.jpg)\n\n------------------------------------------------------------------------\n\n#### Hypothesis test\n\nStatistical procedure used to test an existing claim about a population.\n\n-   Test is based on data; most ideally data collected via probability sampling.\n\n-   $H_0$ - Null hypothesis: If data supports the claim, fail to reject $H_0$\n\n-   $H_a$ - Alternative hypothesis: If data does not support claim, reject $H_0$\n\n![Hypothesis testing. Image from Towards Data Science.](img/wk5-b-3.jpg){width=\"75%\"}\n\n------------------------------------------------------------------------\n\n#### Analysis of variance (ANOVA)\n\nComparing means of more than two populations.\n\n*F-statistic* is a ratio that is used to compare variability between sets.\n\n![Within and between group variation. Image from QCBS R Workshop Series.](img/wk5-b-4.png){width=\"75%\"}\n\n##### Multiple comparison procedures\n\nSet of statistical tests that compare means to each other.\n\n-   Examples include Turkey's test, Least significant difference (LSD), pairwise t-test\n\n-   These tests are only conducted if you analysis of variance identifies differences\n\n------------------------------------------------------------------------\n\n#### Interaction effects\n\nInteraction effects are relevant to statistical models that use two or more variables.\n\n#### Correlation\n\nMeasures the strength and direction of a linear relationship between two variables.\n\n#### Linear regression\n\nHelps make predictions for one variable based on the values of another.\n\n-   There are many types of regression:\n\n    -   Simple linear regression\n\n    -   Multiple linear regression\n\n    -   Logistic regression\n\n    -   Non-linear regression\n\n#### Chi-square test\n\nWhen using correlation and regression analyses, one core assumption is that the variables are quantitative in nature.\n\nWe use a chi-square test to study categorical variables.\n\n![Example research question for a chi-square test. Image from Datatab.net.](img/wk5-b-6.png){width=\"75%\"}\n\nIn the example above, the *null hypothesis* is that there is no relationship between gender and highest level of education; the *alternative hypothesis* is that there is a relationship between gender and highest level of education.\n\n## Part III: Code\n\nOur coding tasks this week will provide an overview of `Lab 1`.\n\n`Lab 1` focused on univariate statistics.\n\nUnivariate statistics refer to analyses that describe a single variable or attribute.\n\n------------------------------------------------------------------------\n\nOpen RStudio.\n\n![Open RStudio.](img/wk5-c-1.png)\n\n------------------------------------------------------------------------\n\n### Task 0: Start a new project\n\nFirst, you will need to navigate to: `File > New Project`\n\nSelect the first option: *New Directory*.\n\n![Select New Directory.](img/wk5-c-2.png)\n\n------------------------------------------------------------------------\n\nThen you will want to select the *New Project* option.\n\n![Select New Project](img/wk5-c-3.png)\n\n------------------------------------------------------------------------\n\nSelect the directory where you wish to store your project.\n\n![Select New Directory.](img/wk5-c-4.png)\n\n------------------------------------------------------------------------\n\nThen, name your project to an appropriate title. Consider `stats-pt2`[^1].\n\n[^1]: We are in part two of our course, so I have chosen `stats-pt2` for this project's title. We'll be starting other projects in parts three and four of our course. Note: there will be no project for part one of our course.\n\n![Name your project.](img/wk5-c-5.png)\n\n------------------------------------------------------------------------\n\nBe sure to place the project in your preferred directory.\n\nOne good option is to make a sub-folder in your `Documents`.\n\n![Place your project in an appropriate directory.](img/wk5-c-6.png)\n\n------------------------------------------------------------------------\n\nClick the box at the bottom right of the pop-up window.\n\nWe generally want to start a new project in a *new* RStudio session.\n\n![Check the box in the bottom right of the popup box.](img/wk5-c-7.png)\n\nThen click `Create Project`.\n\n------------------------------------------------------------------------\n\n### Task 1: Open a new RScript\n\nNow we will open a new RScript.\n\nNavigate to `File > New File > RScript`.\n\nThis RScript file is what you will use to outline your analysis.\n\n![Open a new RScript.](img/wk3-g-1.png)\n\n------------------------------------------------------------------------\n\n### Task 2: Write a preamble\n\nA preamble is similar to the heading of a paper.\n\nThe preamble contains information that will be useful for you and your collaborators.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use the `#` symbol to tell R to ignore the text\n## Name: <include your full name>\n## Date: <sometimes you may want to add a date>\n## Purpose: <insert the goals or purpose of the RScript>\n```\n:::\n\n\n\n\n\n\nRemember to use the `#` symbol to write your preamble.\n\n------------------------------------------------------------------------\n\n### Task 3: Check your working directory\n\nPrior to inserting any code, it is generally helpful to check your working directory.\n\nThis will ensure that you are in the right location to call and save files.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get the working directory\ngetwd()\n```\n:::\n\n\n\n\n\n\nIf, for any reason, the working directory is different from where you saved your R-project, check in the top right of your screen. Here, you should be able to select `stats-pt2` or open the project using the menu options.\n\n------------------------------------------------------------------------\n\n### Task 4: Install your packages\n\nWe will use the `install.packages` function to complete a few tasks.\n\nAny required packages are generally placed at the very top of our code.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\", repos = \"http://cran.us.r-project.org\")\ninstall.packages(\"remotes\", repos = \"http://cran.us.r-project.org\")\n```\n:::\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n### Task 5: Load your libraries\n\nAfter using the `install.packages` function, we need to load specific libraries.\n\nSimilar to installing packages, we generally load libraries at the very top of our code.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load libraries\nlibrary(tidyverse)\nlibrary(remotes)\n```\n:::\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n### Task 6: Call in the `critstats` data package\n\nWe will use the `remotes::install_github()` command to install packages to call in data that I have prepared in a package for our course. The `remotes::install_github()` command communicates with GitHub to access files.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremotes::install_github(\"professornaite/critstats\", force=TRUE)\n```\n:::\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n#### Task 6-a: Load the `critstats` library\n\nNext, we load the `critstats` library which will give us access to the package's contents.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(critstats)\n```\n:::\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n### Task 7: View datasets in the current R session\n\nRStudio has a lot of pre-loaded data sets that we can view or use to practice on different types of variables. We use the `data()` function to view all of the data sets loaded in R.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata()\n```\n:::\n\n\n\n\n\n\nA new window should open in your RStudio session.\n\n------------------------------------------------------------------------\n\n### Task 8: View datasets only in the `critstats` data package\n\nWe can also view only the data sets loaded into the `critstats` package.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(package=\"critstats\")\n```\n:::\n\n\n\n\n\n\nA new window containing only the `critstats` data should open in your RStudio session.\n\n------------------------------------------------------------------------\n\n### Task 9: View documentation for another data package called `datasets`\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(package=\"datasets\")\n```\n:::\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n### Task 10: View documentation for the entire `critstats` data package\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n??critstats\n```\n:::\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n### Task 11: View documentation for a specific data set\n\nWe will select the `africa_data_all` data set and view its documentation.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n??africa_data_all\n```\n:::\n\n\n\n\n\n\nThis documentation is the `codebook` for the data. It contains more specific information about the data frame, each of the variables, and any sourcing information.\n\n------------------------------------------------------------------------\n\n### Task 12: Assign a dataset to an object for efficiency\n\nIf we want to call a data set more efficiently, we can assign it to an object.\n\nThe `df` object is a short name for data frame.\n\nWe will assign `df1` using our assignment operator to the data set.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- africa_data_all\n```\n:::\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n### Task 13: Run a simple command\n\nWe can run simple commands on a data frame using the shorthand object we assigned to it.\n\nLet's use the `glimpse()` function to explore the `africa_data_all` data frame that we assigned to the object `df1`.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(df1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 116\nColumns: 13\n$ country           <chr> \"Nigeria\", \"Ethiopia\", \"Egypt\", \"DR Congo\", \"South A…\n$ pop               <dbl> 206139589, 114963588, 102334404, 89561403, 59308690,…\n$ pop.yearly.change <dbl> 2.58, 2.57, 1.94, 3.19, 1.28, 2.98, 2.28, 3.32, 1.85…\n$ pop.net.change    <dbl> 5175990, 2884858, 1946331, 2770836, 750420, 1728755,…\n$ density           <dbl> 226, 115, 103, 40, 49, 67, 94, 229, 18, 25, 83, 26, …\n$ area              <dbl> 910770, 1000000, 995450, 2267050, 1213090, 885800, 5…\n$ migrants          <dbl> -60000, 30000, -38033, 23861, 145405, -40076, -10000…\n$ fertility.rate    <dbl> 5.4, 4.3, 3.3, 6.0, 2.4, 4.9, 3.5, 5.0, 3.1, 4.4, 2.…\n$ med.age           <dbl> 18, 19, 25, 17, 28, 18, 20, 17, 29, 20, 30, 17, 22, …\n$ urban.pop         <dbl> 52, 21, 43, 46, 67, 37, 28, 26, 73, 35, 64, 67, 57, …\n$ world.share       <dbl> 2.64, 1.47, 1.31, 1.15, 0.76, 0.77, 0.69, 0.59, 0.56…\n$ pop_in_mill       <dbl> 206.13959, 114.96359, 102.33440, 89.56140, 59.30869,…\n$ year              <dbl> 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020…\n```\n\n\n:::\n:::\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n### Task 14: View your data\n\nWe can use the `view()` function to see our entire data frame.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nview(df1)\n```\n:::\n\n\n\n\n\n\nYou may have noticed that a new window opened so that you can `view()` the entire data set. Sometimes, it is inefficient to use this command. Let's look at two other options.\n\n------------------------------------------------------------------------\n\n#### Task 14-a: View the `head` of your data\n\nWe use the `head` function to get a closer look at the first few observations.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# use the `head` function to view the top of the data\nhead(df1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 13\n  country           pop pop.yearly.change pop.net.change density   area migrants\n  <chr>           <dbl>             <dbl>          <dbl>   <dbl>  <dbl>    <dbl>\n1 Nigeria        2.06e8              2.58        5175990     226 9.11e5   -60000\n2 Ethiopia       1.15e8              2.57        2884858     115 1   e6    30000\n3 Egypt          1.02e8              1.94        1946331     103 9.95e5   -38033\n4 DR Congo       8.96e7              3.19        2770836      40 2.27e6    23861\n5 South Africa   5.93e7              1.28         750420      49 1.21e6   145405\n6 Tanzania       5.97e7              2.98        1728755      67 8.86e5   -40076\n# ℹ 6 more variables: fertility.rate <dbl>, med.age <dbl>, urban.pop <dbl>,\n#   world.share <dbl>, pop_in_mill <dbl>, year <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n\n\nChange the number of observations that you want to view in the data frame.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# use the `head` function to view ten (10) observations at the top of the data\nhead(df1, n=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 13\n   country          pop pop.yearly.change pop.net.change density   area migrants\n   <chr>          <dbl>             <dbl>          <dbl>   <dbl>  <dbl>    <dbl>\n 1 Nigeria       2.06e8              2.58        5175990     226 9.11e5   -60000\n 2 Ethiopia      1.15e8              2.57        2884858     115 1   e6    30000\n 3 Egypt         1.02e8              1.94        1946331     103 9.95e5   -38033\n 4 DR Congo      8.96e7              3.19        2770836      40 2.27e6    23861\n 5 South Africa  5.93e7              1.28         750420      49 1.21e6   145405\n 6 Tanzania      5.97e7              2.98        1728755      67 8.86e5   -40076\n 7 Kenya         5.38e7              2.28        1197323      94 5.69e5   -10000\n 8 Uganda        4.57e7              3.32        1471413     229 2.00e5   168694\n 9 Algeria       4.39e7              1.85         797990      18 2.38e6   -10000\n10 Sudan         4.38e7              2.42        1036022      25 1.77e6   -50000\n# ℹ 6 more variables: fertility.rate <dbl>, med.age <dbl>, urban.pop <dbl>,\n#   world.share <dbl>, pop_in_mill <dbl>, year <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n#### Task 14-b: View the `tail` of your data\n\nWe use the `tail` function to get a closer look at the last few observations.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# use the `tail` function to view the top of the data\ntail(df1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 13\n  country           pop pop.yearly.change pop.net.change density   area migrants\n  <chr>           <dbl>             <dbl>          <dbl>   <dbl>  <dbl>    <dbl>\n1 Cabo Verde     598682              0.93           5533     149   4030    -1227\n2 Western Sahara 587259              1.96          11273       2 266000     5600\n3 Mayotte        335995              3.03           9894     896    375        0\n4 Sao Tome & Pr… 231856              1.97           4476     242    960     -600\n5 Seychelles     107660              0.51            542     234    460     -200\n6 Saint Helena     5314             -1.12            -60      14    390        0\n# ℹ 6 more variables: fertility.rate <dbl>, med.age <dbl>, urban.pop <dbl>,\n#   world.share <dbl>, pop_in_mill <dbl>, year <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n\n\nChange the number of observations that you want to view in the data frame.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# use the `tail` function to view ten (10) observations at the top of the data\ntail(df1, n=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 13\n   country          pop pop.yearly.change pop.net.change density   area migrants\n   <chr>          <dbl>             <dbl>          <dbl>   <dbl>  <dbl>    <dbl>\n 1 Eswatini      1.21e6              0.76           9152      70  17200    -5268\n 2 Djibouti      1.14e6              1.39          15606      49  23180      900\n 3 Réunion       9.82e5              0.8            7744     393   2500     -630\n 4 Comoros       8.52e5              1.83          15301     458   1861    -2000\n 5 Cabo Verde    5.99e5              0.93           5533     149   4030    -1227\n 6 Western Saha… 5.87e5              1.96          11273       2 266000     5600\n 7 Mayotte       3.36e5              3.03           9894     896    375        0\n 8 Sao Tome & P… 2.32e5              1.97           4476     242    960     -600\n 9 Seychelles    1.08e5              0.51            542     234    460     -200\n10 Saint Helena  5.31e3             -1.12            -60      14    390        0\n# ℹ 6 more variables: fertility.rate <dbl>, med.age <dbl>, urban.pop <dbl>,\n#   world.share <dbl>, pop_in_mill <dbl>, year <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n### Task 15: Make and save a plot\n\nThe goal of this last task is to learn how to save a plot.\n\nOn the bottom left of your RStudio session, you should notice a few tabs.\n\nThe second tab is the `Plots` tab.\n\n![Find the `Plots` tab.](img/wk3-g-0.png)\n\n------------------------------------------------------------------------\n\n#### Task 15-a: Make a plot\n\nWe will make a random plot using the `plot` command (the plot itself is not important for now).\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(df1$pop)\n```\n:::\n\n\n\n\n\n\nWhenever you make a plot, you can save it in your working directory.\n\nBe sure to check your working directory using the `getwd` command prior to saving.\n\n------------------------------------------------------------------------\n\n#### Task 15-b: Save a plot\n\nWhenever you want to save a plot, you can do so manually in directory portion of your RStudio session.\n\n-   Navigate to the bottom right portion of your RStudio session.\n\n-   Got to the *Plots* tab.\n\n    -   Run the code for your plot, or navigate to your plot using the arrows.\n\n-   Click *Export*\n\n    -   You can save your file as a `.pdf` or as an image.\n\nLater, we will learn to customize plots and insert them into reports and papers.\n\n## ![See the bottom right of the screen.](img/wk3-g-1.png)\n\n### Task 16: Run univariate statistics in R\n\nWe will generate some code to examine univariate statistics in R. This will help you with HW 2.\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nTake the plot of data for two variables, $x$ and $y$ below.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Correlation plot of two variables, x and y](week05_files/figure-html/fig-correlation-1.png){#fig-correlation width=672}\n:::\n:::\n\n\n\n\n\n\nNoticing that there is a relationship between $x$ and $y$, a first step is to run *univariate functions* on each variable individually.\n\n------------------------------------------------------------------------\n\n#### Task 16-a: Measures of center\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mean of x\nmean(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.03163502\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# mean of y\nmean(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.95324\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# median of x\nmedian(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.09398661\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# median of y\nmedian(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.070926\n```\n\n\n:::\n:::\n\n\n\n\n\n\nNote: the median of a continuous variable constitutes the point at which the function of the distribution has the value 0.5\n\nGiven the nature of the variables, we will not compute the mode. Take note, howevever, that a table can be used to find the mode in a discrete variable.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let some variable V contain a set of values\nv <- c(1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 7, 8, 8, 8, 8, 9)\nmode(v)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n:::\n\n\n\n\n\n\nThe output is not what we desire. We can create a table to get the values we'd like.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let some variable z be a set of values\ntable.v <- table(v)\ntable.v\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nv\n1 2 3 4 5 6 7 8 9 \n2 1 1 1 2 1 3 4 1 \n```\n\n\n:::\n:::\n\n\n\n\n\n\nThe table shows us the mode of the variable.\n\n------------------------------------------------------------------------\n\n#### Task 16-b: Measures of variation\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# range of x\nmax(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.387233\n```\n\n\n:::\n\n```{.r .cell-code}\nmin(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -2.183967\n```\n\n\n:::\n\n```{.r .cell-code}\n# create an object for the range\nrange.x = max(x) - min(x)\nrange.x # recall that we only stored the value in the last line, we must call it separately\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.571199\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# range of y\nmax(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9.831654\n```\n\n\n:::\n\n```{.r .cell-code}\nmin(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.6718717\n```\n\n\n:::\n\n```{.r .cell-code}\n# create an object for the range\nrange.y = max(y) - min(y)\nrange.y\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10.50353\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# standard deviation of x\nsd(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9452844\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# standard deviation of y\nsd(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.04768\n```\n\n\n:::\n:::\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n#### Task 16-c: Measures of relative standing\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Interquartile range of x\nIQR(x) # IQR computes the spread of the middle 50 percent of the values in X\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.362935\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Interquartile range of y\nIQR(y) # IQR computes the spread of the middle 50 percent of the values in Y\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.333997\n```\n\n\n:::\n:::\n\n\n\n\n\n\n#### Task 16-d: Plots\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# boxplot\nboxplot(x)\n```\n\n::: {.cell-output-display}\n![](week05_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n\n```{.r .cell-code}\nboxplot(y)\n```\n\n::: {.cell-output-display}\n![](week05_files/figure-html/unnamed-chunk-34-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# histogram\nhist(x)\n```\n\n::: {.cell-output-display}\n![](week05_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(y)\n```\n\n::: {.cell-output-display}\n![](week05_files/figure-html/unnamed-chunk-35-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# density curve\nplot(density(x))\n```\n\n::: {.cell-output-display}\n![](week05_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(density(y))\n```\n\n::: {.cell-output-display}\n![](week05_files/figure-html/unnamed-chunk-36-2.png){width=672}\n:::\n:::\n\n\n\n\n\n\n### **Next up**: Week 6\n",
    "supporting": [
      "week05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}